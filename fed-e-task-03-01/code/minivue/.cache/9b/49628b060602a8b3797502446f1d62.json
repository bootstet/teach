{"id":"js/dep.js","dependencies":[],"generated":{"js":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Dep = /*#__PURE__*/function () {\n  function Dep() {\n    _classCallCheck(this, Dep);\n\n    // 存储所有的观察者\n    this.subs = [];\n  } // 添加观察者\n\n\n  _createClass(Dep, [{\n    key: \"addSub\",\n    value: function addSub(sub) {\n      if (sub && sub.update) {\n        this.subs.push(sub);\n      }\n    } // 发送通知\n\n  }, {\n    key: \"notify\",\n    value: function notify() {\n      this.subs.forEach(function (sub) {\n        sub.update();\n      });\n    }\n  }]);\n\n  return Dep;\n}();"},"sourceMaps":{"js":{"mappings":[{"name":"Dep","generated":{"line":7,"column":4},"source":"js/dep.js","original":{"line":1,"column":6}},{"generated":{"line":8,"column":0},"source":"js/dep.js","original":{"line":2,"column":2}},{"generated":{"line":8,"column":17},"source":"js/dep.js","original":{"line":2,"column":17}},{"generated":{"line":9,"column":0},"source":"js/dep.js","original":{"line":2,"column":17}},{"generated":{"line":11,"column":0},"source":"js/dep.js","original":{"line":3,"column":4}},{"generated":{"line":12,"column":0},"source":"js/dep.js","original":{"line":4,"column":4}},{"name":"subs","generated":{"line":12,"column":9},"source":"js/dep.js","original":{"line":4,"column":9}},{"generated":{"line":12,"column":13},"source":"js/dep.js","original":{"line":4,"column":4}},{"generated":{"line":12,"column":16},"source":"js/dep.js","original":{"line":4,"column":16}},{"generated":{"line":12,"column":18},"source":"js/dep.js","original":{"line":4,"column":4}},{"generated":{"line":13,"column":0},"source":"js/dep.js","original":{"line":5,"column":3}},{"generated":{"line":13,"column":4},"source":"js/dep.js","original":{"line":7,"column":2}},{"name":"sub","generated":{"line":18,"column":27},"source":"js/dep.js","original":{"line":8,"column":10}},{"generated":{"line":18,"column":32},"source":"js/dep.js","original":{"line":8,"column":15}},{"generated":{"line":19,"column":0},"source":"js/dep.js","original":{"line":9,"column":4}},{"name":"sub","generated":{"line":19,"column":10},"source":"js/dep.js","original":{"line":9,"column":8}},{"generated":{"line":19,"column":13},"source":"js/dep.js","original":{"line":9,"column":11}},{"name":"sub","generated":{"line":19,"column":17},"source":"js/dep.js","original":{"line":9,"column":15}},{"generated":{"line":19,"column":20},"source":"js/dep.js","original":{"line":9,"column":18}},{"name":"update","generated":{"line":19,"column":21},"source":"js/dep.js","original":{"line":9,"column":19}},{"generated":{"line":19,"column":27},"source":"js/dep.js","original":{"line":9,"column":4}},{"generated":{"line":19,"column":29},"source":"js/dep.js","original":{"line":9,"column":27}},{"generated":{"line":20,"column":0},"source":"js/dep.js","original":{"line":10,"column":6}},{"name":"subs","generated":{"line":20,"column":13},"source":"js/dep.js","original":{"line":10,"column":11}},{"generated":{"line":20,"column":17},"source":"js/dep.js","original":{"line":10,"column":6}},{"name":"push","generated":{"line":20,"column":18},"source":"js/dep.js","original":{"line":10,"column":16}},{"generated":{"line":20,"column":22},"source":"js/dep.js","original":{"line":10,"column":6}},{"name":"sub","generated":{"line":20,"column":23},"source":"js/dep.js","original":{"line":10,"column":21}},{"generated":{"line":20,"column":26},"source":"js/dep.js","original":{"line":10,"column":6}},{"generated":{"line":21,"column":0},"source":"js/dep.js","original":{"line":11,"column":5}},{"generated":{"line":22,"column":0},"source":"js/dep.js","original":{"line":12,"column":3}},{"generated":{"line":22,"column":6},"source":"js/dep.js","original":{"line":14,"column":2}},{"generated":{"line":26,"column":29},"source":"js/dep.js","original":{"line":15,"column":12}},{"generated":{"line":27,"column":0},"source":"js/dep.js","original":{"line":16,"column":4}},{"name":"subs","generated":{"line":27,"column":11},"source":"js/dep.js","original":{"line":16,"column":9}},{"generated":{"line":27,"column":15},"source":"js/dep.js","original":{"line":16,"column":4}},{"name":"forEach","generated":{"line":27,"column":16},"source":"js/dep.js","original":{"line":16,"column":14}},{"generated":{"line":27,"column":23},"source":"js/dep.js","original":{"line":16,"column":4}},{"generated":{"line":27,"column":24},"source":"js/dep.js","original":{"line":16,"column":22}},{"name":"sub","generated":{"line":27,"column":34},"source":"js/dep.js","original":{"line":16,"column":22}},{"generated":{"line":27,"column":37},"source":"js/dep.js","original":{"line":16,"column":25}},{"generated":{"line":27,"column":39},"source":"js/dep.js","original":{"line":16,"column":29}},{"name":"sub","generated":{"line":28,"column":0},"source":"js/dep.js","original":{"line":17,"column":6}},{"name":"sub","generated":{"line":28,"column":8},"source":"js/dep.js","original":{"line":17,"column":6}},{"generated":{"line":28,"column":11},"source":"js/dep.js","original":{"line":17,"column":9}},{"name":"update","generated":{"line":28,"column":12},"source":"js/dep.js","original":{"line":17,"column":10}},{"generated":{"line":28,"column":18},"source":"js/dep.js","original":{"line":17,"column":6}},{"generated":{"line":29,"column":0},"source":"js/dep.js","original":{"line":18,"column":5}},{"generated":{"line":29,"column":7},"source":"js/dep.js","original":{"line":16,"column":4}},{"generated":{"line":30,"column":0},"source":"js/dep.js","original":{"line":19,"column":3}}],"sources":{"js/dep.js":"class Dep {\n  constructor () {\n    // 存储所有的观察者\n    this.subs = []\n  }\n\n  // 添加观察者\n  addSub (sub) {\n    if (sub && sub.update) {\n      this.subs.push(sub)\n    }\n  }\n\n  // 发送通知\n  notify () {\n    this.subs.forEach(sub => {\n      sub.update()\n    })\n  }\n}"},"lineCount":null}},"error":null,"hash":"5dfb4ba6f178338bf600673157c89287","cacheData":{"env":{}}}